version: '3.8'

services:
  ipfs-master:
    build:
      context: .
      dockerfile: Dockerfile
    image: ipfs-kit-py:latest
    container_name: ipfs-master
    command: master
    volumes:
      - ipfs-master-data:/data
      - ./docker/config-master.yaml:/etc/ipfs-kit/config.yaml:ro
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
      - "9096:9096"
    environment:
      - ROLE=master
      - CONFIG_PATH=/etc/ipfs-kit/config.yaml
      - MAX_MEMORY=4G
      - MAX_STORAGE=100G
      - CLUSTER_SECRET=${CLUSTER_SECRET:-}
    networks:
      - ipfs-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ipfs-worker-1:
    build:
      context: .
      dockerfile: Dockerfile
    image: ipfs-kit-py:latest
    container_name: ipfs-worker-1
    command: worker
    depends_on:
      ipfs-master:
        condition: service_healthy
    environment:
      - ROLE=worker
      - MASTER_ADDR=/dns4/ipfs-master/tcp/9096
      - CONFIG_PATH=/etc/ipfs-kit/config.yaml
      - MAX_MEMORY=2G
      - MAX_STORAGE=50G
      - CLUSTER_SECRET=${CLUSTER_SECRET:-}
    volumes:
      - ipfs-worker-1-data:/data
      - ./docker/config-worker.yaml:/etc/ipfs-kit/config.yaml:ro
    networks:
      - ipfs-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M
    healthcheck:
      test: ["/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ipfs-worker-2:
    build:
      context: .
      dockerfile: Dockerfile
    image: ipfs-kit-py:latest
    container_name: ipfs-worker-2
    command: worker
    depends_on:
      ipfs-master:
        condition: service_healthy
    environment:
      - ROLE=worker
      - MASTER_ADDR=/dns4/ipfs-master/tcp/9096
      - CONFIG_PATH=/etc/ipfs-kit/config.yaml
      - MAX_MEMORY=2G
      - MAX_STORAGE=50G
      - CLUSTER_SECRET=${CLUSTER_SECRET:-}
    volumes:
      - ipfs-worker-2-data:/data
      - ./docker/config-worker.yaml:/etc/ipfs-kit/config.yaml:ro
    networks:
      - ipfs-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M
    healthcheck:
      test: ["/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ipfs-leecher:
    build:
      context: .
      dockerfile: Dockerfile
    image: ipfs-kit-py:latest
    container_name: ipfs-leecher
    command: leecher
    volumes:
      - ipfs-leecher-data:/data
      - ./docker/config-leecher.yaml:/etc/ipfs-kit/config.yaml:ro
    environment:
      - ROLE=leecher
      - CONFIG_PATH=/etc/ipfs-kit/config.yaml
      - MAX_MEMORY=1G
      - MAX_STORAGE=20G
    ports:
      - "5002:5001"  # Map to different port to avoid conflict
      - "8081:8080"  # Map to different port to avoid conflict
    networks:
      - ipfs-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M
    healthcheck:
      test: ["/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  ipfs-master-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/master
  ipfs-worker-1-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/worker1
  ipfs-worker-2-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/worker2
  ipfs-leecher-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/leecher

networks:
  ipfs-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16