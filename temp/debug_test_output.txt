INFO: === Starting lotus_kit debug ===
INFO: 1. Testing direct lotus_kit import...
INFO: Detected protobuf version: 3.20.3
INFO: HAS_OLD_MESSAGE_FACTORY: False
INFO: HAS_NEW_MESSAGE_FACTORY: False
DEBUG: MessageFactory.GetPrototype method is available
DEBUG: Applying libp2p import hooks...
DEBUG: Import hooks are no longer applied.
DEBUG: libp2p extra detected: True
DEBUG: Performing initial dependency check
DEBUG: libp2p extra detected, dependencies should be available
DEBUG: Dependency libp2p is available
DEBUG: Dependency multiaddr is available
DEBUG: Dependency base58 is available
DEBUG: Dependency cryptography is available
DEBUG: Optional dependency google-protobuf is missing
DEBUG: Optional dependency eth-hash is missing
DEBUG: Optional dependency eth-keys is missing
INFO: Optional dependencies missing: google-protobuf, eth-hash, eth-keys
INFO: Some advanced functionality may be limited
INFO: libp2p dependencies are available
DEBUG: Using custom stream interface from ipfs_kit_py
INFO: Successfully patched INetStream with read_until method
DEBUG: libp2p dependencies are available, importing required modules
DEBUG: libp2p pubsub modules available
DEBUG: libp2p.kademlia module not available: No module named 'libp2p.kademlia'. DHT functionality will be limited.
WARNING: Provider class not found in kademlia network module
WARNING: libp2p.tools.constants module not available: cannot import name 'ALPHA_VALUE' from 'libp2p.tools.constants' (/home/barberb/ipfs_kit_py/.venv/lib/python3.12/site-packages/libp2p/tools/constants.py). Using default ALPHA_VALUE=3.
WARNING: libp2p.typing module not available: No module named 'libp2p.typing'. Using fallback TProtocol type.
DEBUG: mDNS discovery support is not available: No module named 'libp2p.discovery'
DEBUG: NAT traversal support is available
DEBUG: High-level API module is available
INFO: Adding libp2p methods to IPFSSimpleAPI
INFO: LibP2P integration module imported
INFO: Successfully imported WebRTCBenchmarkIntegrationAnyIO
INFO: Lotus binary available: True
INFO: Lotus binary path: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus
DEBUG: matplotlib data path: /home/barberb/ipfs_kit_py/.venv/lib/python3.12/site-packages/matplotlib/mpl-data
DEBUG: CONFIGDIR=/home/barberb/.config/matplotlib
DEBUG: interactive is False
DEBUG: platform is linux
DEBUG: CACHEDIR=/home/barberb/.cache/matplotlib
DEBUG: Using fontManager instance from /home/barberb/.cache/matplotlib/fontlist-v390.json
INFO: FSSpec is available
INFO: IPFSFileSystem imported successfully (relative import)
INFO: WebRTC dependencies status: NUMPY=True, CV2=True, AV=True, AIORTC=True
INFO: WebRTC availability: True
DEBUG: No async context detected
INFO: WebRTC capabilities: available=True
INFO: WebRTC streaming is available and enabled
INFO: WebRTC benchmark helpers: anyio_support=True
INFO: Loaded configuration from /home/barberb/.ipfs_kit/config.json
INFO: Initializing connection to IPFS node at 127.0.0.1:5001
DEBUG: Trying Storacha endpoints: ['https://up.storacha.network/bridge', 'https://api.web3.storage', 'https://up.web3.storage/bridge']
DEBUG: Starting new HTTPS connection (1): up.storacha.network:443
DEBUG: https://up.storacha.network:443 "HEAD /bridge HTTP/1.1" 404 0
INFO: Found working Storacha endpoint: https://up.storacha.network/bridge (Status code: 404)
DEBUG: Starting new HTTPS connection (1): api.web3.storage:443
DEBUG: https://api.web3.storage:443 "HEAD / HTTP/1.1" 404 0
INFO: Found working Storacha endpoint: https://api.web3.storage (Status code: 404)
DEBUG: Starting new HTTPS connection (1): up.web3.storage:443
DEBUG: https://up.web3.storage:443 "HEAD /bridge HTTP/1.1" 404 0
INFO: Found working Storacha endpoint: https://up.web3.storage/bridge (Status code: 404)
DEBUG: Python dependency 'requests' is installed
DEBUG: W3 CLI is installed (version: w3, 7.12.0)
INFO: Storacha kit initialized with API endpoint: https://up.storacha.network/bridge
DEBUG: Starting new HTTPS connection (1): huggingface.co:443
DEBUG: https://huggingface.co:443 "GET /api/whoami-v2 HTTP/1.1" 200 1912
INFO: Using existing HuggingFace Hub authentication as endomorphosis
DEBUG: Initialized IPFS ipget with role=leecher, correlation_id=46ebd163-5464-469a-bb99-9f48d5f7e5a9
INFO: Using LOTUS_BINARY_PATH from lotus_kit: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus
DEBUG: Initialized Lotus daemon manager
INFO: Lotus daemon is not running
DEBUG: Lotus daemon is not running
INFO: Attempting to start Lotus daemon...
INFO: Lotus daemon is not running
DEBUG: Lotus daemon is not running
INFO: Lotus daemon is not running
DEBUG: Lotus repository appears to be properly initialized
INFO: Using LOTUS_BINARY_PATH from lotus_kit: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus
INFO: Using specific Lotus binary path: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus
DEBUG: Detected Lotus version: 1.33.0+mainnet+git.7bdccad3d
INFO: This Lotus version (1.33.0+mainnet+git.7bdccad3d) does not support the network flag
INFO: This Lotus version (1.33.0+mainnet+git.7bdccad3d) does not support the network flag
DEBUG: Starting Lotus daemon with command: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus daemon --api-listen-address /ip4/127.0.0.1/tcp/1234/http --p2p-listen-address /ip4/0.0.0.0/tcp/2345 --bootstrap=false
DEBUG: Redirecting daemon output to: /home/barberb/.lotus/daemon_stdout.log and /home/barberb/.lotus/daemon_stderr.log
INFO: Lotus daemon process started with PID 690489, waiting 2 seconds for initial stability
DEBUG: Lotus daemon stdout: Incorrect Usage: flag provided but not defined: -api-listen-address

NAME:
   lotus daemon - Start a lotus daemon process

USAGE:
   lotus daemon command [command options]

COMMANDS:
   stop     Stop a running lotus daemon
   help, h  Shows a list of commands or help for one command

OPTIONS:
   --api value               (default: "1234")
   --genesis value           genesis file to use for first node run, which may be a zstd compressed CAR or an uncompressed CAR file.
   --bootstrap               (default: true)
   --import-chain value      on first run, load chain from given file or url and validate
   --import-snapshot value   import chain state from a given chain export file or url
   --remove-existing-chain   remove existing chain and splitstore data on a snapshot-import (default: false)
   --halt-after-import       halt the process after importing chain from file (default: false)
   --lite                    start lotus in lite mode (default: false)
   --pprof value             specify name of file for writing cpu profile to
   --profile value           specify type of node
   --manage-fdlimit          manage open file limit (default: true)
   --config value            specify path of config file to use
   --api-max-req-size value  maximum API request size accepted by the JSON RPC server (default: 0)
   --restore value           restore from backup file
   --restore-config value    config file to use when restoring from backup
   --help, -h                show help

DEBUG: Lotus daemon stderr: ERROR: flag provided but not defined: -api-listen-address


ERROR: Failed to start daemon: incompatible command-line flags - Check Lotus version and use compatible flags - Check logs: stdout=/home/barberb/.lotus/daemon_stdout.log, stderr=/home/barberb/.lotus/daemon_stderr.log
INFO: Real daemon failed, but simulation mode is working - will use as fallback
INFO: Lotus daemon started successfully: simulation_mode_fallback
INFO: Lotus daemon started successfully during initialization (PID: None)
INFO: Initialized Lotus Kit for Filecoin integration
INFO: Starting required daemons for role: leecher
WARNING: daemon_start method not found on ipfs object, attempting alternate checks
INFO: IPFS daemon started successfully: already_running
INFO: Lotus daemon is not running
DEBUG: Lotus daemon is not running
INFO: Lotus daemon is not running
DEBUG: Lotus repository appears to be properly initialized
INFO: Using LOTUS_BINARY_PATH from lotus_kit: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus
INFO: Using specific Lotus binary path: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus
DEBUG: Detected Lotus version: 1.33.0+mainnet+git.7bdccad3d
INFO: This Lotus version (1.33.0+mainnet+git.7bdccad3d) does not support the network flag
INFO: This Lotus version (1.33.0+mainnet+git.7bdccad3d) does not support the network flag
DEBUG: Starting Lotus daemon with command: /home/barberb/ipfs_kit_py/ipfs_kit_py/bin/lotus daemon --api-listen-address /ip4/127.0.0.1/tcp/1234/http --p2p-listen-address /ip4/0.0.0.0/tcp/2345 --bootstrap=false
DEBUG: Redirecting daemon output to: /home/barberb/.lotus/daemon_stdout.log and /home/barberb/.lotus/daemon_stderr.log
INFO: Lotus daemon process started with PID 690578, waiting 2 seconds for initial stability
DEBUG: Lotus daemon stdout: Incorrect Usage: flag provided but not defined: -api-listen-address

NAME:
   lotus daemon - Start a lotus daemon process

USAGE:
   lotus daemon command [command options]

COMMANDS:
   stop     Stop a running lotus daemon
   help, h  Shows a list of commands or help for one command

OPTIONS:
   --api value               (default: "1234")
   --genesis value           genesis file to use for first node run, which may be a zstd compressed CAR or an uncompressed CAR file.
   --bootstrap               (default: true)
   --import-chain value      on first run, load chain from given file or url and validate
   --import-snapshot value   import chain state from a given chain export file or url
   --remove-existing-chain   remove existing chain and splitstore data on a snapshot-import (default: false)
   --halt-after-import       halt the process after importing chain from file (default: false)
   --lite                    start lotus in lite mode (default: false)
   --pprof value             specify name of file for writing cpu profile to
   --profile value           specify type of node
   --manage-fdlimit          manage open file limit (default: true)
   --config value            specify path of config file to use
   --api-max-req-size value  maximum API request size accepted by the JSON RPC server (default: 0)
   --restore value           restore from backup file
   --restore-config value    config file to use when restoring from backup
   --help, -h                show help

DEBUG: Lotus daemon stderr: ERROR: flag provided but not defined: -api-listen-address


ERROR: Failed to start daemon: incompatible command-line flags - Check Lotus version and use compatible flags - Check logs: stdout=/home/barberb/.lotus/daemon_stdout.log, stderr=/home/barberb/.lotus/daemon_stderr.log
INFO: Real daemon failed, but simulation mode is working - will use as fallback
INFO: Lotus daemon started successfully: simulation_mode_fallback
INFO: Lotus daemon started successfully: simulation_mode_fallback
DEBUG: Error checking IPFS daemon with 'ipfs id': ipfs_py.run_ipfs_command() got an unexpected keyword argument 'check'
DEBUG: Error checking IPFS daemon with 'ps': ipfs_py.run_ipfs_command() got an unexpected keyword argument 'check'
DEBUG: IPFS daemon detected as running using 'pgrep' command
INFO: Lotus daemon is not running
DEBUG: Lotus daemon is not running
WARNING: Not all daemons are running. Non-running daemons: lotus
INFO: LibP2P integration applied to IPFSSimpleAPI
INFO: Initialized mock IPFS filesystem with role: leecher
INFO: IPFSFileSystem initialized successfully
INFO: IPFSSimpleAPI initialized with role: leecher
INFO: Successfully imported IPFSSimpleAPI from high_level_api.py
DEBUG: Loaded backend Agg version v2.2.
INFO: Lassie binary available: True
INFO: LibP2P functionality integrated into High-Level API.
INFO: WebRTC API available at /api/v0/webrtc
INFO: WAL API available at /api/v0/wal
INFO: Storage Backends API available at /api/v0/storage
INFO: Observability API available at /api/v0/observability
INFO: Added Prometheus metrics endpoint at /metrics
INFO: Prometheus metrics endpoint added at /metrics
INFO: ✓ Direct lotus_kit import successful
INFO: 2. Checking HAS_LOTUS from ipfs_kit.py...
INFO: ✓ HAS_LOTUS from ipfs_kit.py: True
INFO: 3. Creating ipfs_kit instance...
INFO: Starting required daemons for role: leecher
INFO: All required daemons are running
INFO: ✓ ipfs_kit instance created
INFO: 4. Checking lotus_kit availability...
INFO: ✓ Has lotus_kit attribute: False
ERROR: ✗ lotus_kit NOT available
ERROR: Available attributes: ['add_car_to_ipfs', 'auto_start_daemons', 'check_daemon_status', 'chunk_file', 'cluster_manager', 'config', 'create', 'create_car', 'create_dag_node', 'dashboard', 'dataset_manager', 'dht_findpeer', 'dht_findprovs', 'distributed_training', 'extract_car', 'files_ls', 'files_mkdir', 'files_stat', 'get_cluster_metrics', 'get_cluster_status', 'get_filesystem', 'get_metadata_index', 'get_task_status', 'graph_query', 'graph_rag', 'initialize', 'ipfs_add', 'ipfs_add_path', 'ipfs_add_pin', 'ipfs_cat', 'ipfs_cluster_health', 'ipfs_cluster_peers_ls', 'ipfs_cluster_recover', 'ipfs_cluster_status', 'ipfs_follow_info', 'ipfs_follow_sync', 'ipfs_get', 'ipfs_get_config', 'ipfs_get_config_value', 'ipfs_get_pinset', 'ipfs_id', 'ipfs_kit_ready', 'ipfs_kit_start', 'ipfs_kit_stop', 'ipfs_ls_path', 'ipfs_pin_add', 'ipfs_pin_ls', 'ipfs_pin_rm', 'ipfs_remove_path', 'ipfs_remove_pin', 'ipfs_set_config', 'ipfs_set_config_value', 'ipfs_swarm_connect', 'ipfs_swarm_disconnect', 'ipfs_swarm_peers', 'ipld_extension', 'is_initialized', 'knowledge_graph', 'langchain_integration', 'libp2p', 'libp2p_announce_content', 'libp2p_connect_peer', 'libp2p_connect_via_relay', 'libp2p_enable_relay', 'libp2p_find_providers', 'libp2p_get_multiaddrs', 'libp2p_get_peer_id', 'libp2p_is_connected', 'libp2p_request_content', 'libp2p_start_discovery', 'libp2p_store_content', 'llama_index_integration', 'load_car', 'load_collection', 'logger', 'metadata', 'model_registry', 'monitoring', 'name_publish', 'name_resolve', 'path', 'path_string', 'propose_config_change', 'publish_metadata_index', 'register_task_handler', 'role', 'save_car', 'stop_daemons', 'submit_cluster_task', 'sync_metadata_index', 'test_install']
INFO: 5. Debugging initialization...
INFO:   Role: leecher
INFO:   Metadata: {}
INFO:   HAS_LOTUS in module: NOT_FOUND
INFO: === Debug complete. Success: False ===
TransformersIntegration is instantiated successfully
