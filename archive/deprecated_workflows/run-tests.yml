name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install package in development mode
        pip install -e ".[dev,full]"
    
    - name: Test with pytest
      run: |
        python -m pytest test/ --junitxml=test-results-${{ matrix.python-version }}.xml -v
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-results-${{ matrix.python-version }}.xml
      # Always run this step even if previous steps fail
      if: ${{ always() }}

  report:
    needs: test
    runs-on: ubuntu-20.04
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Download all test results
      uses: actions/download-artifact@v4
      
    - name: Generate combined report
      run: |
        pip install pytest pytest-html
        
        # List all downloaded artifacts
        find . -name "*.xml" -type f
        
        # Generate HTML report
        pytest --collect-only --html=test-report.html || true
    
    - name: Upload combined report
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: test-report.html
