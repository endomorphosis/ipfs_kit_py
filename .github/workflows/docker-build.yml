name: Build and Publish Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test image
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_ID=$(echo ${{ steps.meta.outputs.tags }} | cut -d ',' -f1)
          echo "Testing image $IMAGE_ID"
          docker pull $IMAGE_ID
          docker run --rm $IMAGE_ID --help
      
      - name: Run architecture tests on built image
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_ID=$(echo ${{ steps.meta.outputs.tags }} | cut -d ',' -f1)
          
          echo "Running architecture tests on AMD64..."
          docker run --rm --platform linux/amd64 $IMAGE_ID \
            bash -c "pip install pytest --quiet && python -m pytest tests/test_architecture_support.py -v --tb=line -k 'not lotus' || echo 'Some tests failed but continuing'"
          
          echo "Running architecture tests on ARM64..."
          docker run --rm --platform linux/arm64 $IMAGE_ID \
            bash -c "pip install pytest --quiet && python -m pytest tests/test_architecture_support.py -v --tb=line -k 'not lotus' || echo 'Some tests failed but continuing'"
          
  publish-helm:
    name: Publish Helm Chart
    runs-on: ubuntu-22.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
          
      - name: Package Helm chart
        run: |
          helm package helm/ipfs-kit --destination ./helm-dist
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-charts
          path: ./helm-dist
          
      # In a real-world scenario, you would push to a Helm repository here
      # This is a placeholder for that action