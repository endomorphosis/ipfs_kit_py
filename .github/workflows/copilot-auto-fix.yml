name: Copilot Auto-Fix Implementation

# This workflow can be triggered to have GitHub Copilot implement fixes
# It can be called from issues, PRs, or manually
on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to fix'
        required: true
        type: number
      pr_number:
        description: 'PR number where fix should be implemented'
        required: false
        type: number

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read

jobs:
  trigger-copilot-fix:
    name: Trigger Copilot Fix
    runs-on: ubuntu-latest
    # Only run if comment contains the trigger phrase or workflow_dispatch
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
       contains(github.event.comment.body, '@copilot /fix-workflow'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get issue/PR details
        id: get-details
        uses: actions/github-script@v7
        with:
          script: |
            let issueNumber, prNumber;

            if (context.eventName === 'workflow_dispatch') {
              issueNumber = ${{ github.event.inputs.issue_number }};
              prNumber = ${{ github.event.inputs.pr_number || 'null' }};
            } else {
              issueNumber = context.issue.number;

              // Get the issue to check if it has a linked PR
              const { data: issue } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber
              });

              // Look for PR link in issue body
              const prMatch = issue.body.match(/pull\/(\d+)/);
              if (prMatch) {
                prNumber = parseInt(prMatch[1]);
              }
            }

            core.setOutput('issue_number', issueNumber);
            core.setOutput('pr_number', prNumber || '');

            return { issueNumber, prNumber };

      - name: React to comment
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

      - name: Comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = ${{ steps.get-details.outputs.issue_number }};
            const prNumber = '${{ steps.get-details.outputs.pr_number }}';

            let message = `🤖 GitHub Copilot Auto-Fix triggered!\n\n`;

            if (prNumber) {
              message += `I'll implement a fix in PR #${prNumber}.\n\n`;
              message += `### Instructions for GitHub Copilot Workspace:\n\n`;
              message += `1. Open PR #${prNumber} in GitHub Copilot Workspace\n`;
              message += `2. Review the failure context files in \`.github/workflow-failures/\`\n`;
              message += `3. Use the prompt: "Please analyze the workflow failure context and implement a fix for the failed workflow. Make minimal, targeted changes."\n`;
              message += `4. Review the suggested changes\n`;
              message += `5. Push the changes to the PR branch\n\n`;
            } else {
              message += `⚠️ No PR found linked to this issue. Please create a PR first or link an existing PR.\n\n`;
              message += `To create a PR for this fix:\n`;
              message += `1. Create a new branch\n`;
              message += `2. Add the failure context files\n`;
              message += `3. Open a PR referencing this issue\n`;
            }

            message += `### Alternative: Manual Implementation\n\n`;
            message += `If you prefer to implement the fix manually:\n`;
            message += `1. Review the workflow logs linked in this issue\n`;
            message += `2. Identify and fix the root cause\n`;
            message += `3. Test your changes\n`;
            message += `4. Submit a PR with your fix\n`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: message
            });

      - name: Add copilot-workspace label
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.get-details.outputs.pr_number }}';

            if (prNumber) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: parseInt(prNumber),
                labels: ['copilot-workspace', 'auto-fix-in-progress']
              });
            }

      - name: Summary
        run: |
          echo "## Copilot Auto-Fix Triggered" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Issue**: #${{ steps.get-details.outputs.issue_number }}" >> $GITHUB_STEP_SUMMARY

          if [ -n "${{ steps.get-details.outputs.pr_number }}" ]; then
            echo "- **PR**: #${{ steps.get-details.outputs.pr_number }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
            echo "1. Open PR #${{ steps.get-details.outputs.pr_number }} in GitHub Copilot Workspace" >> $GITHUB_STEP_SUMMARY
            echo "2. Ask Copilot to analyze and fix the workflow failure" >> $GITHUB_STEP_SUMMARY
            echo "3. Review and approve the changes" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **PR**: Not found - needs to be created or linked" >> $GITHUB_STEP_SUMMARY
          fi
