name: CI/CD Validation

# This workflow validates that all CI/CD scripts and workflows are correct
# It runs on every push and PR to ensure workflows remain functional

on:
  push:
    branches: [ main, develop ]
    paths:
      - '.github/workflows/**'
      - 'scripts/ci/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '.github/workflows/**'
      - 'scripts/ci/**'
  workflow_dispatch:  # Allow manual triggering
  schedule:
    # Run daily at 00:00 UTC to catch any issues
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  validate-workflows:
    name: Validate Workflows
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
    
    - name: Validate workflow YAML files
      run: |
        python scripts/ci/validate_ci_workflows.py --verbose
    
    - name: Check for workflow syntax errors
      run: |
        echo "Checking all workflow files for syntax errors..."
        for workflow in .github/workflows/*.yml .github/workflows/*.yaml; do
          if [ -f "$workflow" ]; then
            echo "Checking: $workflow"
            python -c "import yaml; yaml.safe_load(open('$workflow'))" || exit 1
          fi
        done
        echo "✅ All workflow files have valid YAML syntax"
  
  test-ci-scripts:
    name: Test CI Scripts
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml requests
    
    - name: Test CI scripts functionality
      run: |
        python scripts/ci/test_ci_scripts.py --verbose
      continue-on-error: true  # Don't fail if some scripts need arguments
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ci-scripts-test-results
        path: test_results/ci_scripts_test_results.json
        retention-days: 30
  
  verify-dependencies:
    name: Verify Build Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y build-essential gcc g++ make git
    
    - name: Verify AMD64 dependencies
      run: |
        python scripts/ci/verify_amd64_dependencies.py
    
    - name: Verify ARM64 dependencies
      run: |
        python scripts/ci/verify_arm64_dependencies.py
  
  comprehensive-validation:
    name: Comprehensive Validation
    runs-on: ubuntu-latest
    needs: [validate-workflows, test-ci-scripts, verify-dependencies]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml requests
        sudo apt-get update -qq
        sudo apt-get install -y build-essential gcc g++ make git
    
    - name: Run comprehensive validation
      run: |
        bash scripts/ci/run_all_validations.sh
    
    - name: Generate validation report
      if: always()
      run: |
        echo "## CI/CD Validation Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f test_results/ci_scripts_test_results.json ]; then
          echo "#### CI Scripts Test Results" >> $GITHUB_STEP_SUMMARY
          total=$(jq -r '.total' test_results/ci_scripts_test_results.json)
          success=$(jq -r '.success' test_results/ci_scripts_test_results.json)
          rate=$(awk "BEGIN {printf \"%.1f\", ($success/$total)*100}")
          echo "- Total scripts: $total" >> $GITHUB_STEP_SUMMARY
          echo "- Successful: $success" >> $GITHUB_STEP_SUMMARY
          echo "- Success rate: ${rate}%" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "#### Workflow Validation" >> $GITHUB_STEP_SUMMARY
        echo "- Total workflows: $(ls .github/workflows/*.yml .github/workflows/*.yaml 2>/dev/null | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- All workflows validated ✅" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: validation-results
        path: |
          test_results/
          /tmp/dependency_verification.json
        retention-days: 30
  
  check-documentation:
    name: Check Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Verify CI/CD documentation exists
      run: |
        echo "Checking for required documentation files..."
        
        required_docs=(
          "CI_CD_VALIDATION_GUIDE.md"
          "scripts/ci/README.md"
          "scripts/ci/WORKFLOW_MONITORING.md"
        )
        
        missing=0
        for doc in "${required_docs[@]}"; do
          if [ -f "$doc" ]; then
            echo "✅ Found: $doc"
          else
            echo "❌ Missing: $doc"
            missing=$((missing + 1))
          fi
        done
        
        if [ $missing -gt 0 ]; then
          echo "⚠️  $missing documentation file(s) missing"
          exit 1
        else
          echo "✅ All required documentation files exist"
        fi
    
    - name: Check documentation is up to date
      run: |
        echo "Checking if documentation mentions all validation tools..."
        
        if grep -q "validate_ci_workflows.py" CI_CD_VALIDATION_GUIDE.md; then
          echo "✅ validate_ci_workflows.py documented"
        else
          echo "❌ validate_ci_workflows.py not documented"
          exit 1
        fi
        
        if grep -q "test_ci_scripts.py" CI_CD_VALIDATION_GUIDE.md; then
          echo "✅ test_ci_scripts.py documented"
        else
          echo "❌ test_ci_scripts.py not documented"
          exit 1
        fi
        
        if grep -q "run_all_validations.sh" CI_CD_VALIDATION_GUIDE.md; then
          echo "✅ run_all_validations.sh documented"
        else
          echo "❌ run_all_validations.sh not documented"
          exit 1
        fi
        
        echo "✅ All validation tools are documented"

  summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [validate-workflows, test-ci-scripts, verify-dependencies, comprehensive-validation, check-documentation]
    if: always()
    
    steps:
    - name: Check all jobs status
      run: |
        echo "## CI/CD Validation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All validation jobs completed." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Workflow validation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ CI scripts testing" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Dependency verification" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Comprehensive validation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Documentation check" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All CI/CD workflows are validated and ready to use! 🎉" >> $GITHUB_STEP_SUMMARY
