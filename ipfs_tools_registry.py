"""IPFS MCP Tools Registry - Auto-generated by load_ipfs_mcp_tools.py"""

IPFS_TOOLS = [
    {
        "name": "ipfs_files_ls",
        "description": "List files and directories in the IPFS MFS (Mutable File System)",
        "schema": {
    "type": "object",
    "properties": {
        "path": {
            "type": "string",
            "description": "Path within MFS to list (default: /)",
            "default": "/"
        },
        "long": {
            "type": "boolean",
            "description": "Use long listing format (include size, type)",
            "default": False
        }
    }
}
    },
    {
        "name": "ipfs_files_mkdir",
        "description": "Create directories in the IPFS MFS (Mutable File System)",
        "schema": {
    "type": "object",
    "properties": {
        "path": {
            "type": "string",
            "description": "Path to create within MFS"
        },
        "parents": {
            "type": "boolean",
            "description": "Create parent directories if they don't exist",
            "default": True
        }
    },
    "required": [
        "path"
    ]
}
    },
    {
        "name": "ipfs_files_write",
        "description": "Write data to a file in the IPFS MFS (Mutable File System)",
        "schema": {
    "type": "object",
    "properties": {
        "path": {
            "type": "string",
            "description": "Path within MFS to write to"
        },
        "content": {
            "type": "string",
            "description": "Content to write to the file"
        },
        "create": {
            "type": "boolean",
            "description": "Create the file if it doesn't exist",
            "default": True
        },
        "truncate": {
            "type": "boolean",
            "description": "Truncate the file if it already exists",
            "default": True
        }
    },
    "required": [
        "path",
        "content"
    ]
}
    },
    {
        "name": "ipfs_files_read",
        "description": "Read a file from the IPFS MFS (Mutable File System)",
        "schema": {
    "type": "object",
    "properties": {
        "path": {
            "type": "string",
            "description": "Path within MFS to read from"
        },
        "offset": {
            "type": "integer",
            "description": "Byte offset to start reading from",
            "default": 0
        },
        "count": {
            "type": "integer",
            "description": "Maximum number of bytes to read",
            "default": -1
        }
    },
    "required": [
        "path"
    ]
}
    },
    {
        "name": "ipfs_files_rm",
        "description": "Remove files or directories from the IPFS MFS",
        "schema": {
    "type": "object",
    "properties": {
        "path": {
            "type": "string",
            "description": "Path within MFS to remove"
        },
        "recursive": {
            "type": "boolean",
            "description": "Recursively remove directories",
            "default": False
        },
        "force": {
            "type": "boolean",
            "description": "Forcibly remove the file/directory",
            "default": False
        }
    },
    "required": [
        "path"
    ]
}
    },
    {
        "name": "ipfs_files_stat",
        "description": "Get information about a file or directory in the MFS",
        "schema": {
    "type": "object",
    "properties": {
        "path": {
            "type": "string",
            "description": "Path within MFS to get stats for"
        },
        "with_local": {
            "type": "boolean",
            "description": "Compute the amount of the dag that is local",
            "default": False
        },
        "size": {
            "type": "boolean",
            "description": "Compute the total size of the dag",
            "default": True
        }
    },
    "required": [
        "path"
    ]
}
    },
    {
        "name": "ipfs_files_cp",
        "description": "Copy files within the IPFS MFS",
        "schema": {
    "type": "object",
    "properties": {
        "source": {
            "type": "string",
            "description": "Source path (can be an MFS or IPFS path)"
        },
        "dest": {
            "type": "string",
            "description": "Destination path within MFS"
        }
    },
    "required": [
        "source",
        "dest"
    ]
}
    },
    {
        "name": "ipfs_files_mv",
        "description": "Move files within the IPFS MFS",
        "schema": {
    "type": "object",
    "properties": {
        "source": {
            "type": "string",
            "description": "Source path (must be an MFS path)"
        },
        "dest": {
            "type": "string",
            "description": "Destination path within MFS"
        }
    },
    "required": [
        "source",
        "dest"
    ]
}
    },
    {
        "name": "ipfs_name_publish",
        "description": "Publish an IPNS name",
        "schema": {
    "type": "object",
    "properties": {
        "path": {
            "type": "string",
            "description": "IPFS path to publish"
        },
        "resolve": {
            "type": "boolean",
            "description": "Resolve before publishing",
            "default": True
        },
        "lifetime": {
            "type": "string",
            "description": "Time duration that the record will be valid for",
            "default": "24h"
        }
    },
    "required": [
        "path"
    ]
}
    },
    {
        "name": "ipfs_name_resolve",
        "description": "Resolve an IPNS name",
        "schema": {
    "type": "object",
    "properties": {
        "name": {
            "type": "string",
            "description": "The IPNS name to resolve"
        },
        "recursive": {
            "type": "boolean",
            "description": "Resolve until the result is not an IPNS name",
            "default": True
        },
        "nocache": {
            "type": "boolean",
            "description": "Do not use cached entries",
            "default": False
        }
    },
    "required": [
        "name"
    ]
}
    },
    {
        "name": "ipfs_dag_put",
        "description": "Add a DAG node to IPFS",
        "schema": {
    "type": "object",
    "properties": {
        "data": {
            "type": "object",
            "description": "The data to store as a DAG node"
        },
        "format": {
            "type": "string",
            "description": "The format to use for the DAG node",
            "default": "cbor",
            "enum": [
                "cbor",
                "json",
                "raw"
            ]
        },
        "input_codec": {
            "type": "string",
            "description": "The codec that the input data is encoded with",
            "default": "json"
        },
        "pin": {
            "type": "boolean",
            "description": "Pin this object when adding",
            "default": False
        }
    },
    "required": [
        "data"
    ]
}
    },
    {
        "name": "ipfs_dag_get",
        "description": "Get a DAG node from IPFS",
        "schema": {
    "type": "object",
    "properties": {
        "cid": {
            "type": "string",
            "description": "The CID of the DAG node to get"
        },
        "path": {
            "type": "string",
            "description": "The path within the DAG structure to retrieve",
            "default": ""
        }
    },
    "required": [
        "cid"
    ]
}
    },
]

def get_ipfs_tools():
    """Get all IPFS tool definitions"""
    return IPFS_TOOLS
