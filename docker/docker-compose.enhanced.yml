services:
  ipfs-kit:
    build:
      context: .
      dockerfile: docker/Dockerfile.enhanced
    container_name: ipfs-kit-daemon
    ports:
      - "4001:4001"     # IPFS swarm
      - "5001:5001"     # IPFS API
      - "8080:8080"     # IPFS gateway
      - "9999:9999"     # IPFS-Kit daemon API
      - "8000:8000"     # MCP server
    volumes:
      - ipfs_data:/home/ipfs_user/.ipfs
      - cluster_data:/home/ipfs_user/.ipfs-cluster
      - logs_data:/tmp/ipfs_kit_logs
      - config_data:/tmp/ipfs_kit_config
    environment:
      - IPFS_PATH=/home/ipfs_user/.ipfs
      - IPFS_CLUSTER_PATH=/home/ipfs_user/.ipfs-cluster
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: ["all"]

  ipfs-kit-cluster:
    build:
      context: .
      dockerfile: docker/Dockerfile.enhanced
    container_name: ipfs-kit-cluster
    ports:
      - "4002:4001"     # IPFS swarm (different port)
      - "5002:5001"     # IPFS API (different port)
      - "8081:8080"     # IPFS gateway (different port)
      - "9094:9094"     # IPFS Cluster API
      - "9095:9095"     # IPFS Cluster proxy API
      - "9096:9096"     # IPFS Cluster swarm
      - "10000:9999"    # IPFS-Kit daemon API (different port)
    volumes:
      - ipfs_data_cluster:/home/ipfs_user/.ipfs
      - cluster_data_cluster:/home/ipfs_user/.ipfs-cluster
      - logs_data_cluster:/tmp/ipfs_kit_logs
      - config_data_cluster:/tmp/ipfs_kit_config
    environment:
      - IPFS_PATH=/home/ipfs_user/.ipfs
      - IPFS_CLUSTER_PATH=/home/ipfs_user/.ipfs-cluster
      - PYTHONPATH=/app
    restart: unless-stopped
    depends_on:
      - ipfs-kit
    command: ["cluster"]

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: ipfs-kit-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: ipfs-kit-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  ipfs_data:
  cluster_data:
  logs_data:
  config_data:
  ipfs_data_cluster:
  cluster_data_cluster:
  logs_data_cluster:
  config_data_cluster:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: ipfs-kit-network
